type Mutation {
    createCard(input: CreateCardInput!): CreateCardPayload
    updateCard(input: UpdateCardInput!): UpdateCardPayload
    moveCard(input: MoveCardInput!): MoveCardPayload
}

type CreateCardPayload {
    card: Card!
}

input CreateCardInput {
    title: String!
    description: String
    priority: Int!
    tasks: [TaskInput] = []
    labels: [LabelInput] = []
}

input TaskInput {
    description: String!
    completed: Boolean!
    priority: Int
}

input LabelInput {
    name: String!
    color: String!
}

type UpdateCardPayload {
    card: Card
}

input UpdateCardInput {
    id: ID!
    description: String
    title: String!
    priority: Int!
    tasks: [TaskInput] = []
    labels: [LabelInput] = []
}

type MoveCardPayload {
    card: Card!
}

input MoveCardInput {
    id: ID!
    to: StatusInput!
}

enum StatusInput {
    BACKLOG,
    WIP,
    DONE,
}
